@startuml
interface fr.unice.polytech.biblio.interfaces.StudentFinder {
~ List<T> findAll()
~ Optional<T> findByName(String)
~ Optional<T> findByNumber(int)
}

class fr.unice.polytech.biblio.server.JaxsonUtils {
+ {static} String toJson(Object)
+ {static} T fromJson(String,Class<T>)
}

class fr.unice.polytech.biblio.components.Bibliotheque {
+ {static} int DUREE_MAX_EMPRUNT
- Map<String,List<Livre>> livres
- Map<Livre,Emprunt> emprunts
- Map<String,Livre> livreById
- void initLibrary()
+ void addLivre(Livre)
+ List<Livre> getLivres()
+ Optional<Livre> getLivreDisponibleByTitle(String)
+ List<Livre> getLivresByTitle(String)
+ boolean emprunte(Etudiant,Livre)
+ Emprunt getEmpruntByLivre(Livre)
+ boolean rend(Livre)
+ List<Emprunt> getEmprunts()
+ Livre getLivrebyId(String)
}


class fr.unice.polytech.biblio.server.SimpleHttpServer4Library {
- {static} Map<Integer,HttpServer> servers
~ {static} Logger logger
+ {static} int DEFAULT_PORT4LIBRARY
+ {static} int DEFAULT_PORT_4_SCOLARITY
+ {static} void main(String[])
+ {static} HttpServer startServer(int,Bibliotheque,StudentRegistry)
+ {static} void stopServer(int)
}


class fr.unice.polytech.biblio.server.httphandlers.HttpUtils {
+ {static} int OK_CODE
+ {static} int CREATED_CODE
+ {static} int NO_CONTENT_CODE
+ {static} int BAD_REQUEST_CODE
+ {static} int NOT_FOUND_CODE
+ {static} int INTERNAL_SERVER_ERROR_CODE
+ {static} String CONTENT_TYPE
+ {static} String APPLICATION_JSON
+ {static} String TEXT_PLAIN
}

interface fr.unice.polytech.biblio.interfaces.StudentManager {
~ void addStudent(String,int)
~ void removeStudent(int)
~ void updateStudent(int,String)
}

class fr.unice.polytech.biblio.components.StudentRegistry {
~ Map<Integer,Etudiant> students
+ List<Etudiant> findAll()
+ Optional<Etudiant> findByName(String)
+ Optional<Etudiant> findByNumber(int)
+ void addStudent(String,int)
+ void removeStudent(int)
+ void updateStudent(int,String)
}


class fr.unice.polytech.biblio.entities.Livre {
- String titre
- String[] auteurs
- String isbn
- String identifiant
- boolean estEmprunte
- {static} int DEFAULT_COMPTEUR
~ Logger logger
+ String getTitre()
+ void setTitre(String)
+ String getIsbn()
+ void setIsbn(String)
+ String[] getAuteurs()
+ void setAuteurs(String)
+ boolean estEmprunte()
+ void setEstEmprunte(boolean)
+ String getIdentifiant()
+ boolean equals(Object)
+ int hashCode()
+ String toString()
}


class fr.unice.polytech.biblio.server.SimpleHttpServer4Scolarity {
- {static} Map<Integer,HttpServer> servers
+ {static} int DEFAULT_PORT
~ {static} java.util.logging.Logger logger
+ {static} void main(String[])
+ {static} HttpServer startServer(int)
+ {static} HttpServer startServer(int,StudentRegistry)
+ {static} void stopServer(int)
}


class fr.unice.polytech.biblio.entities.Emprunt {
- LocalDate dateDeRetourMax
- Livre livreEmprunte
- Etudiant emprunteur
+ Livre getLivreEmprunte()
+ Etudiant getEmprunteur()
+ LocalDate getDateDeRetourMax()
+ boolean equals(Object)
+ int hashCode()
}


class fr.unice.polytech.biblio.server.httphandlers.MembersHttpHandler {
- StudentRegistry studentRegistry
~ Logger logger
+ void handle(com.sun.net.httpserver.HttpExchange)
- void askToDeleteMember(HttpExchange)
- void askToUpdateMember(HttpExchange)
- void askToCreateMember(HttpExchange)
- void answerWithMember(HttpExchange,String)
- void answerWithAllMembers(HttpExchange)
- void sendErrorResponse(HttpExchange,int,String)
}


class fr.unice.polytech.biblio.server.httphandlers.LibraryHttpHandler {
- Bibliotheque bibliotheque
- StudentRegistry studentRegistry
~ Logger logger
+ void handle(HttpExchange)
- void askToBorrowBook(HttpExchange,String)
- void askToCreateBook(HttpExchange)
- void answerWithBook(HttpExchange,String)
- void answerWithAllBooks(HttpExchange)
- void validateId(String)
- void validateStudentDTO(LibraryHttpHandler.StudentDTO)
- void sendErrorResponse(HttpExchange,int,String)
}


class fr.unice.polytech.biblio.server.httphandlers.LibraryHttpHandler$StudentDTO {
- int studentNumber
+ int studentNumber()
}


class fr.unice.polytech.biblio.entities.Etudiant {
- String nom
- int noEtudiant
- Collection<Emprunt> emprunts
+ String getName()
+ void setName(String)
+ int getStudentNumber()
+ void setStudentNumber(int)
+ Collection<Emprunt> getEmprunts()
+ int getNombreDEmprunts()
+ void addEmprunt(Emprunt)
+ void removeEmprunt(Emprunt)
+ Emprunt getEmpruntFor(String)
+ String toString()
}


interface fr.unice.polytech.biblio.interfaces.StudentInterface {
~ String getName()
~ int getStudentNumber()
~ void setName(String)
~ void setStudentNumber(int)
}



fr.unice.polytech.biblio.interfaces.StudentManager <|.. fr.unice.polytech.biblio.components.StudentRegistry
fr.unice.polytech.biblio.interfaces.StudentFinder <|.. fr.unice.polytech.biblio.components.StudentRegistry
com.sun.net.httpserver.HttpHandler <|.. fr.unice.polytech.biblio.server.httphandlers.MembersHttpHandler
com.sun.net.httpserver.HttpHandler <|.. fr.unice.polytech.biblio.server.httphandlers.LibraryHttpHandler
fr.unice.polytech.biblio.server.httphandlers.LibraryHttpHandler +.. fr.unice.polytech.biblio.server.httphandlers.LibraryHttpHandler$StudentDTO
fr.unice.polytech.biblio.interfaces.StudentInterface <|.. fr.unice.polytech.biblio.entities.Etudiant
@enduml